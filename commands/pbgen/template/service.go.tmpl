package {{ .EndpointPkgName }}

import (
	"context"
	"fmt"
	"net/http"

	"{{ .GoPackage }}"
	"github.com/fengjx/luchen"
)

func (e *{{ .ServiceName }}Endpoint) {{ .Method.Name }}Endpoint() luchen.Endpoint {
	fn := func(ctx context.Context, request any) (any, error) {
		req, ok := request.(*{{ .PkgName }}.{{ .Method.InputType }})
		if !ok {
			msg := fmt.Sprintf("invalid request type: %T", request)
			return nil, luchen.NewErrno(http.StatusBadRequest, msg)
		}
		return e.handler.{{ .Method.Name }}(ctx, req)
	}
	return fn
}

{{- if .Method.Comment }}
{{- range $line := split .Method.Comment "\n" }}
// {{ $line }}
{{- end }}
{{- else }}
// {{ .Method.Name }} 实现 {{ .ServiceName }}Handler 接口中的 {{ .Method.Name }} 方法
{{- end }}
func (h *{{ .ServiceName }}HandlerImpl) {{ .Method.Name }}(ctx context.Context, req *{{ .PkgName }}.{{ .Method.InputType }}) (*{{ .PkgName }}.{{ .Method.OutputType }}, error) {
	// TODO: implement me
	return &{{ .PkgName }}.{{ .Method.OutputType }}{}, nil
}